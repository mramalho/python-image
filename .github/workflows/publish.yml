name: 'Publish Image'

permissions:
  id-token: write
  contents: write
  actions: write
  pull-requests: write
  packages: read

on:
  workflow_call:
    inputs:
      settings-file:
        description: 'Path to the settings file'
        required: false
        type: string
        default: 'settings.yml'
      docker-file-path:
        description: 'Path to the Dockerfile'
        required: false
        type: string
        default: '.'        
      runs-on:
        description: 'Runner label to use'
        required: false
        type: string
        default: 'ubuntu-latest'

jobs:
  build-image:
    name: Build Image
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for SonarCloud
      
      - name: Validate Inputs
        run: |
          if [ ! -f "${{ inputs.settings-file }}" ]; then
            echo "::error::Settings file not found: ${{ inputs.settings-file }}"
            exit 1
          fi
          if [ ! -f "${{ inputs.docker-file-path }}/Dockerfile" ]; then
            echo "::error::Dockerfile not found in: ${{ inputs.docker-file-path }}"
            exit 1
          fi
      
      - name: Run YAML to Github Output Action 
        id: settings-parser
        uses: christian-ci/action-yaml-github-output@master 
        with:
          file_path: ${{ inputs.settings-file }}

      - name: Install Safety
        run: pip install safety

      - name: Run Safety Check
        run: safety check -r requirements.txt --full-report --output reports/safety-report.txt

      - name: Upload Safety Report
        uses: actions/upload-artifact@v4
        with:
          name: safety-report
          path: reports/safety-report.txt

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.docker-file-path }}
          push: true
          tags: |
            ${{ steps.settings-parser.outputs.registry }}/${{ steps.settings-parser.outputs.repository }}:${{ github.sha }}
            ${{ steps.settings-parser.outputs.registry }}/${{ steps.settings-parser.outputs.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
